
/*
int toOctalNumber(int decimalNumber) - returns octal number or 0 if parameter <= 0;
int toDecimal(int octalNumber) - returns decimal number or 0 if parameter <= 0;

public class Solution {
    public static void main(String[] args) {
        int decimalNumber = 21;
        System.out.println("Десятичное число " + decimalNumber + " равно восьмеричному числу " + toOctal(decimalNumber));
        int octalNumber = 25;
        System.out.println("Восьмеричное число " + octalNumber + " равно десятичному числу " + toDecimal(octalNumber));
    }

    public static int toOctal(int decimalNumber) {
        int octalNumber = 0;
        if(decimalNumber > 0)
            for(int i=0; decimalNumber != 0; i++){
                octalNumber += (decimalNumber % 8) * Math.pow(10, i);
                decimalNumber /= 8;
            }
        return octalNumber;
    }

    public static int toDecimal(int octalNumber) {
        int demicalNumber = 0;
        if(octalNumber > 0)
            for(int i=0; octalNumber != 0; i++){
                demicalNumber += (octalNumber % 10) * Math.pow(8, i);
                octalNumber /= 10;
            }
        return demicalNumber;
    }
}
